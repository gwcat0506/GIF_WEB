{"ast":null,"code":"var _jsxFileName = \"/Users/gwcat/Desktop/GIF_WEB/GIF_WEB/emoji/src/main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainUI = () => {\n  _s();\n  const [leftContent, setLeftContent] = useState('');\n  const [rightContent, setRightContent] = useState('');\n  const handleLeftChange = e => {\n    setLeftContent(e.target.value);\n  };\n  const handleRightChange = e => {\n    setRightContent(e.target.value);\n  };\n  useEffect(() => {\n    // 1초마다 왼쪽 화면에 무작위 문구를 입력하는 함수\n    const addRandomTextToLeft = () => {\n      const phrases = ['Hello!', 'How are you?', 'React is awesome!', 'Welcome to my app!'];\n      const randomIndex = Math.floor(Math.random() * phrases.length);\n      setLeftContent(prevContent => prevContent + phrases[randomIndex] + '\\n');\n    };\n\n    // 1초마다 addRandomTextToLeft 함수를 호출\n    const intervalId = setInterval(addRandomTextToLeft, 1000);\n\n    // 컴포넌트가 unmount될 때 인터벌을 정리(cleanup)\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        backgroundColor: '#f0f0f0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: leftContent,\n        onChange: handleLeftChange,\n        style: {\n          width: '100%',\n          height: '100%',\n          padding: '10px',\n          boxSizing: 'border-box',\n          fontSize: '20px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1,\n        backgroundColor: '#e0e0e0'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: rightContent,\n        onChange: handleRightChange,\n        style: {\n          width: '100%',\n          height: '100%',\n          padding: '10px',\n          boxSizing: 'border-box',\n          fontSize: '16px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(MainUI, \"H04vBxUFbT3WIZ/4YNBJy7rdgJ4=\");\n_c = MainUI;\nexport default MainUI;\nvar _c;\n$RefreshReg$(_c, \"MainUI\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MainUI","_s","leftContent","setLeftContent","rightContent","setRightContent","handleLeftChange","e","target","value","handleRightChange","addRandomTextToLeft","phrases","randomIndex","Math","floor","random","length","prevContent","intervalId","setInterval","clearInterval","style","display","height","children","flex","backgroundColor","onChange","width","padding","boxSizing","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gwcat/Desktop/GIF_WEB/GIF_WEB/emoji/src/main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MainUI = () => {\n  const [leftContent, setLeftContent] = useState('');\n  const [rightContent, setRightContent] = useState('');\n\n  const handleLeftChange = (e) => {\n    setLeftContent(e.target.value);\n  };\n\n  const handleRightChange = (e) => {\n    setRightContent(e.target.value);\n  };\n\n  useEffect(() => {\n    // 1초마다 왼쪽 화면에 무작위 문구를 입력하는 함수\n    const addRandomTextToLeft = () => {\n      const phrases = ['Hello!', 'How are you?', 'React is awesome!', 'Welcome to my app!'];\n      const randomIndex = Math.floor(Math.random() * phrases.length);\n      setLeftContent((prevContent) => prevContent + phrases[randomIndex] + '\\n');\n    };\n\n    // 1초마다 addRandomTextToLeft 함수를 호출\n    const intervalId = setInterval(addRandomTextToLeft, 1000);\n\n    // 컴포넌트가 unmount될 때 인터벌을 정리(cleanup)\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div style={{ display: 'flex', height: '100vh' }}>\n      <div style={{ flex: 1, backgroundColor: '#f0f0f0' }}>\n        <textarea\n          value={leftContent}\n          onChange={handleLeftChange}\n          style={{ width: '100%', height: '100%', padding: '10px', boxSizing: 'border-box', fontSize: '20px' }}\n        />\n      </div>\n      <div style={{ flex: 1, backgroundColor: '#e0e0e0' }}>\n        <textarea\n          value={rightContent}\n          onChange={handleRightChange}\n          style={{ width: '100%', height: '100%', padding: '10px', boxSizing: 'border-box', fontSize: '16px' }}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default MainUI;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMU,gBAAgB,GAAIC,CAAC,IAAK;IAC9BJ,cAAc,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAChC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAC,IAAK;IAC/BF,eAAe,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACjC,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACA,MAAMc,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,OAAO,GAAG,CAAC,QAAQ,EAAE,cAAc,EAAE,mBAAmB,EAAE,oBAAoB,CAAC;MACrF,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGJ,OAAO,CAACK,MAAM,CAAC;MAC9Dd,cAAc,CAAEe,WAAW,IAAKA,WAAW,GAAGN,OAAO,CAACC,WAAW,CAAC,GAAG,IAAI,CAAC;IAC5E,CAAC;;IAED;IACA,MAAMM,UAAU,GAAGC,WAAW,CAACT,mBAAmB,EAAE,IAAI,CAAC;;IAEzD;IACA,OAAO,MAAM;MACXU,aAAa,CAACF,UAAU,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEpB,OAAA;IAAKuB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC/C1B,OAAA;MAAKuB,KAAK,EAAE;QAAEI,IAAI,EAAE,CAAC;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAF,QAAA,eAClD1B,OAAA;QACEU,KAAK,EAAEP,WAAY;QACnB0B,QAAQ,EAAEtB,gBAAiB;QAC3BgB,KAAK,EAAE;UAAEO,KAAK,EAAE,MAAM;UAAEL,MAAM,EAAE,MAAM;UAAEM,OAAO,EAAE,MAAM;UAAEC,SAAS,EAAE,YAAY;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrC,OAAA;MAAKuB,KAAK,EAAE;QAAEI,IAAI,EAAE,CAAC;QAAEC,eAAe,EAAE;MAAU,CAAE;MAAAF,QAAA,eAClD1B,OAAA;QACEU,KAAK,EAAEL,YAAa;QACpBwB,QAAQ,EAAElB,iBAAkB;QAC5BY,KAAK,EAAE;UAAEO,KAAK,EAAE,MAAM;UAAEL,MAAM,EAAE,MAAM;UAAEM,OAAO,EAAE,MAAM;UAAEC,SAAS,EAAE,YAAY;UAAEC,QAAQ,EAAE;QAAO;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACnC,EAAA,CA/CID,MAAM;AAAAqC,EAAA,GAANrC,MAAM;AAiDZ,eAAeA,MAAM;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}